const fs = require("fs");
const { measureMemory } = require("vm");
const https = require('https');


function compare(a, b) {
  if (a.name > b.name) return 1; // –µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ
  if (a.name == b.name) return 0; // –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã
  if (a.name < b.name) return -1; // –µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ
  }


module.exports.run = async (bot, message, args) => {

	console.log(args);


	let toGet;

	try {

		toGet = message.mentions.members.first() || message.guild.members.cache.get(args[0]);
		console.log(toGet.id)

		if(toGet.id == message.author.id) 
		{
			message.reply("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–µ–±–µ –¥–µ–Ω—å–≥–∏!");
			return;
		}


		args.forEach(element => {
			if(element != toGet && !isNaN(element)) 
			{ 
				request_money = parseInt(element); 
				//console.log(`OOOOO ${element}`)
			} 
		});


	} 
	catch(e)
	{
		console.error(e);
	}



	


  console.log(args);  

	


  if (!args) 
  {
     message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ —É –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–∏!"); return;
  }

	if (!request_money) 
  {
     message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–æ–≤!"); return;
  }

	if (request_money<0) 
  {
     message.reply("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞! –¢–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞!"); return;
  }



  var dir3 = "./GUILDS/"+message.guild.id;

  /////////////////////////////

  rawdata = fs.readFileSync(`./GUILDS/`+message.guild.id+`/Score.json`);
  obj2 = JSON.parse(rawdata);
  var Score = obj2['Users'].find( User => User.ID === message.author.id).Score;
	
	var GiftScore;
	
	

	try
	{
		GiftScore = obj2['Users'].find(User => User.ID === toGet.id).Score;
		console.log(Score + " -> " + GiftScore);


	}
	catch(e)
	{
		console.error(e);
		message.reply("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ—Å–∏–º –ø—Ä–æ—â–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞... –í–æ–∑–º–æ–∂–Ω–æ —É —É–∫–∞–∑–∞–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –±–æ—Ç–∞ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã—Ç —Å—á—ë—Ç –≤ –ß–æ–∫–æ–±–∞–Ω–∫–µ?" );
		return;
	}

	if ( !Number.isInteger( request_money ) ) {
		console.error("–≠–¢–û –ù–ï –ß–ò–°–õ–û!");
		message.reply("–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ");
		return;
	} 

  if(GiftScore < request_money) {
    message.reply("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ç–∞–∫–∏—Ö –¥–µ–Ω–µ–≥. –ï–º—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç " + (request_money - GiftScore) + " –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–æ–≤!"); return;
  }



	let request_mes = await message.channel.send(`${toGet}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${message.author} —Ö–æ—á–µ—Ç —É –≤–∞—Å –∑–∞–ø—Ä–æ—Å–∏—Ç—å ${request_money} –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–æ–≤. –•–æ—Ç–∏—Ç–µ –∏—Ö –æ—Ç–¥–∞—Ç—å?`);

	request_mes.react('üëç').then(() => request_mes.react('üëé'));

const filter = (reaction, user) => {
	return ['üëç', 'üëé'].includes(reaction.emoji.name) && user.id === toGet.id;
};

request_mes.awaitReactions({ filter, max: 1, time: 60000, errors: ['time'] })
	.then(collected => {
		const reaction = collected.first();

		if (reaction.emoji.name === 'üëç') {

			GiftScore = obj2['Users'].find(User => User.ID === toGet.id).Score;
			Score = obj2['Users'].find( User => User.ID === message.author.id).Score;

			if(GiftScore < request_money) {
				message.reply("–ú—ã —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å—á—ë—Ç, –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç " + (request_money - GiftScore) + " –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–æ–≤! –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!"); return;
			}
			
			obj2['Users'].find( User => User.ID === message.author.id).Score = Score + request_money;
			obj2['Users'].find(User => User.ID === toGet.id).Score = GiftScore - request_money;
			fs.writeFileSync(dir3+"/Score.json", JSON.stringify(obj2))
		
			message.reply(`–ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω, —Ç–µ–ø–µ—Ä—å —É ${toGet} ${GiftScore - request_money} –ß–æ–∫–æ—á–∏–ø—Å–∏–∫–æ–≤. –ê —É ${message.author} –∏—Ö ${Score + request_money}`)
		

		} else {
			message.reply(`${message.author} –î–µ–Ω—è–∫ –Ω–µ –±—É–¥–µ—Ç, ${toGet} –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–∏.`);
		}
	})
	.catch(collected => {
		message.reply('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–∏ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–¥–∞—ë—Ç!');
	});

}


  
  //console.log(new_Score);
  //
 
module.exports.help = {
    name: ["–∑–∞–ø—Ä–æ—Å–∏—Ç—å","–ø–æ–ø—Ä–æ—Å–∏—Ç—å","–ø—Ä–æ—Å–∏—Ç—å"],
    type: "info",
    desc: "–ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ß–æ–∫–æ–ß–∏–ø—Å–∏–∫–∏."
}
